@model Businesses_Accounting.Models.ViewModels.CreateContactViewModel

@{
    ViewData["Title"] = "ویرایش شخص";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="g-col-4 g-col-sm-4">
    <form asp-action="Edit">
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.ImageUrl)
        @Html.HiddenFor(x => x.IsCustomer)
        @Html.HiddenFor(x => x.IsStockholder)
        @Html.HiddenFor(x => x.Employee)
        @Html.HiddenFor(x => x.IsVendor)
        @Html.HiddenFor(x => x.BusinessId)
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class=" g-grid-2 g-grid-sm-1">
            <div id="filesbox" class="form-group pt-5">
                <input asp-for="files" class="form-control" />
            </div>
            <div class="group pt-3">

                <div class="form-group mb-1">
                    <label asp-for="Company" class="control-label"></label>
                    @(Html.Kendo().TextBoxFor(m => m.Company)
                        .HtmlAttributes(new { style = "width:100%", onchange = "autoOtherFild(this,`LegalName`)" })
                        )
                    <span asp-validation-for="Company" class="text-danger"></span>
                </div>

                <div class="form-group mb-1">
                    <label asp-for="FirstName" class="control-label"></label>
                    @(Html.Kendo().TextBoxFor(m => m.FirstName)
                        .HtmlAttributes(new { style = "width:100%", onchange = "fillDisplayName()" })
                        )
                    <span asp-validation-for="FirstName" class="text-danger"></span>
                </div>
                <div class="form-group mb-1">
                    <label asp-for="LastName" class="control-label"></label>
                    @(Html.Kendo().TextBoxFor(m => m.LastName)
                        .HtmlAttributes(new { style = "width:100%", onchange = "fillDisplayName()" })
                        )
                    <span asp-validation-for="LastName" class="text-danger"></span>
                </div>
                <div class="form-group mb-1">
                    <label asp-for="DisplayName" class="control-label"></label>
                    @(Html.Kendo().TextBoxFor(m => m.DisplayName)
                        .HtmlAttributes(new { style = "width:100%" })
                        )
                    <span asp-validation-for="DisplayName" class="text-danger"></span>
                </div>
                <div class="form-group mb-1">
                    <label asp-for="CategoryId" class="control-label"></label>
                    @(Html.Kendo().ComboBoxFor(m => m.CategoryId).Filter(FilterType.Contains).MinLength(3).Placeholder("انتخاب کنید...")
                        .DataTextField("Title").DataValueField("Id").HtmlAttributes(new { style = "width:100%" }).Height(520)
                        .DataSource(source =>
                        {
                            source.Read(read => { read.Action("Items_BusinessCategories", "Basic").Data("filterBusinessCategories"); }).ServerFiltering(true);
                        })

                        )
                </div>
                <div class="form-group">
                    @(Html.Kendo().CheckBoxGroup().Name("checkboxgroup-second").Layout("horizontal").BindTo(Model.Type.Items).Value(Model.Type.CheckBoxGroupValue).Events(e => e.Select("onCheckBoxGroupSelect"))
                        )

                </div>

            </div>
        </div>
        <div class="form-group mt-2">
            <input type="submit" value="ویرایش" class="btn btn-warning " />
        </div>
    </form>
</div>





<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function uploadEditor(container, options) {

            let ofield = options.field;
            let imageurl = options.model.ImageUrl;
            $(getImageEditor(ofield, imageurl)).appendTo(container)
            //.kendoUpload();

        }
        function fillDisplayName() {
            let fname = document.getElementById("FirstName").value;
            let lname = document.getElementById("LastName").value;
            document.getElementById("DisplayName").value = `${fname} ${lname}`;
        }
        function filterBusinessCategories(e) {
            return kendo.ui.ComboBox.requestData($("#CategoryId"));
        }
        function filterBusinessTypes(e) {
            return kendo.ui.ComboBox.requestData($("#TypeId"));
        }
        function filterCurrency(e) {
            return kendo.ui.ComboBox.requestData($("#MainCurrencyId"));
        }
        function filterCalendarsTypes(e) {
            return kendo.ui.ComboBox.requestData($("#CalendarId"));
        }
        function filterInventoryAccountingSystems(e) {
            return kendo.ui.ComboBox.requestData($("#InventoryAccountingSystem"));
        }
        function onFormValidateField(e) {
            $("#validation-success").html("");
        }
        function onCheckBoxGroupSelect(e) {
            let hItemid = ``;
            let selected = $(e.target[0]).is(":checked");
            let itemval = $(e.target[0]).val();
            switch (itemval) {
                case "1":
                    hItemid = `IsCustomer`;
                    break;
                case "2":
                    hItemid = `IsVendor`;
                    break;
                case "3":
                    hItemid = `IsStockholder`;
                    break;
                case "4":
                    hItemid = `Employee`;
                    break;
                default:
                // code block
            }
            let el = document.getElementById(hItemid);
            el.value = selected;
        }
        function settypevalue() {
            var newValue = []
        @{
            var txt = "";
            var listitems = Model.Type.CheckBoxGroupValue;
            foreach (var item in listitems)
            {
                txt += $"newValue.push({item});";
            }
        }
        @Html.Raw(txt)
                        var checkBoxGroup = $("#Type").data("kendoCheckBoxGroup");
            checkBoxGroup.value(newValue);
        }
        function onFormSubmit(e) {
            e.preventDefault();
            $("#validation-success").html("<div class='k-messagebox k-messagebox-success'>Form data is valid!</div>");
        }

        function onFormClear(e) {
            $("#validation-success").html("");
        }
        $(document).ready(function () {
            settypevalue();
        });
        let tempppp = getImageEditor(`files`, `@(Model.ImageUrl)`)
        $(document.getElementById(`filesbox`)).html(tempppp)
    </script>
}
