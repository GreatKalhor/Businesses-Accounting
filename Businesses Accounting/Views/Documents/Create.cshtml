@model Businesses_Accounting.Models.Document

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style=" grid-column-end: span 3; grid-row-end: span 1;"></div>
<form asp-action="Create" id="myform">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(x => x.BusinessFiscalYearId)
    <div class="form-group">
        @(Html.Kendo().NumericTextBoxFor(m => m.Number).Label(l =>
            {
                l.Content("شماره");
            })
            .HtmlAttributes(new { style = "width:100%" })
            )
    </div>
    <div class="form-group">
        @(Html.Kendo().NumericTextBoxFor(m => m.Reference).Label(l =>
            {
                l.Content("ارجاع");
            })
            .HtmlAttributes(new { style = "width:100%" })
            )
    </div>
 
    <div class="form-group">
        @(Html.Kendo().TextAreaFor(m => m.Description).Label(l =>
            {
                l.Content("شرح");
            })
            .HtmlAttributes(new { style = "width:100%" })
            )
    </div>
    <div class="form-group">
        @(Html.Kendo().DateTimePickerFor(m => m.DocumentDate).Label(l =>
            {
                l.Content("تاریخ سند");
            })
            .HtmlAttributes(new { style = "width:100%" })
            )
    </div>
    @Html.HiddenFor(x => x.DocumentDate)
@*     <div class="form-group">
        @(Html.Kendo().NumericTextBoxFor(m => m.Amount).Label(l =>
            {
                l.Content("مبلغ");
            })
            .HtmlAttributes(new { style = "width:100%" })
            )
    </div> *@
 @(Html.Kendo().Grid<CreateAccountingJournalViewModel>()
    .Name("Grid")
    .Columns(columns =>
    {
            columns.Bound(p => p.AccountId).Hidden();
            columns.Bound(p => p.Accounttxt);
            columns.Bound(p => p.Credit).Width(140);
            columns.Bound(p => p.Debit).Width(140);
            columns.Bound(p => p.Amount).Width(140);
        @* columns.Bound(p => p.UnitsInStock).Width(140); *@
            @* columns.Bound(p => p.Discontinued).Width(100); *@
            columns.Command(command =>{ command.Edit().Text("ویرایش");            command.Destroy().Text("حذف"); });
        })
    .ToolBar(toolbar =>
    {
        toolbar.Create();
    })
    .Editable(editable => editable.Mode(GridEditMode.PopUp))
   .Pageable()
   .Navigatable()
   .Sortable()
   .Scrollable()
   .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .PageSize(20)
 .Model(m =>
 {
     m.Id(p => p.Id);
     m.Field(f => f.AccountId);
 })
        .Create("Editing_Create", "Documents")//.Events(e => e.Change("onMySave"))
        .Read("Editing_Read", "Documents")
        .Update("Editing_Update", "Documents")
        .Destroy("Editing_Destroy", "Documents")

        ).Events(e => e.Edit("onEdit"))
)
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }

    // Prevent sorting when new record without Product Name is added
    function onSort(e) {
        var gridData = e.sender.dataSource.data()
        gridData.forEach(function (element) {
            if (!element.ProductName) {
                e.preventDefault()
            }
        });
    }
</script>

    <script>
        var selectedItem;
        var myselectedItem;

        function onMySave(e) {
            var displayedData = $(document.getElementById(e)).data().kendoGrid.dataSource.view();
            console.log(displayedData)
            fetch("@(Url.Action("Editing_Save", "Documents"))", {
                "body": JSON.stringify(displayedData),
                "method": "POST",
            }).then(console.log("ok"))
        }
        function onch(e) {
            if (myselectedItem == undefined) {
                setTimeout(function () {
                    e.sender.trigger('click')
                });
            }
        }
        function onEdit(e) {
            selectedItem = e.model.AccountId;
        }
        function onsel(e) {
            if (myselectedItem == undefined) {
                setTimeout(function () {
                    e.sender.trigger('click')
                    e.sender.trigger('change')
                });
            }
        }
        function onOpen(e) {
             selectedItem = null;
        }
        function onDataBound(e) {
            if (selectedItem ) {
                setTimeout(function () {
                    e.sender.value(selectedItem);
                    e.sender.trigger('change')
                },100);
            }
        }
    </script>

<div id="ajdata"></div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary" onclick="mysub('myform')">Create</button>
       
    </div>
</form>
<div>
    <a asp-action="Index">Back to List</a>
</div> 
<script>
    function mysub(e) {

        var  mdiv= document.getElementById('ajdata');
        var displayedData = $(document.getElementById('Grid')).data().kendoGrid.dataSource.view();
        let ss = "";
        for (let i = 0; i < displayedData.length; i++) {
            displayedData[i].Id = i;
            ss += myAccountingJournals(displayedData[i]) ;
        }
        mdiv.innerHTML = ss;
        document.getElementById(e).submit();
    }
    function myAccountingJournals(j) {
      

        if (j) {
            var html = "<input data-val='true' name='AccountingJournals[" + j.Id + "].Id' type='hidden' value='" + j.Id + "'>" + "<input data-val='true' name='AccountingJournals[" + j.Id + "].DocumentId' type='hidden' value='" + j.DocumentId + "'>" + "<input data-val='true' name='AccountingJournals[" + j.Id + "].AccountId' type='hidden' value='" + j.AccountId + "'>" + "<input data-val='true' name='AccountingJournals[" + j.Id + "].SubAccountId' type='hidden' value='" + j.SubAccountId + "'>" + "<input data-val='true' name='AccountingJournals[" + j.Id + "].SubAccount' type='hidden' value='" + j.SubAccount + "'>" + "<input data-val='true' name='AccountingJournals[" + j.Id + "].Description' type='hidden' value='" + j.Description + "'>" + "<input data-val='true' name='AccountingJournals[" + j.Id + "].Debit' type='hidden' value='" + j.Debit + "'>" + "<input data-val='true' name='AccountingJournals[" + j.Id + "].Credit' type='hidden' value='" + j.Credit + "'>" + "<input data-val='true' name='AccountingJournals[" + j.Id + "].CurrencyId' type='hidden' value='" + j.CurrencyId + "'>" + "<input data-val='true' name='AccountingJournals[" + j.Id + "].Amount' type='hidden' value='" + j.Amount + "'>";

            return html;
        }
        else {
            return " ";
        }
    }
</script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
