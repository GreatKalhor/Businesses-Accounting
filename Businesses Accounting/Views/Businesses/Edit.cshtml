@model Businesses_Accounting.Models.ViewModels.CreateBusinessViewModel

@{
    ViewData["Title"] = "ویرایش";
}

<div class="g-col-4 g-col-sm-4">
    <form asp-action="Edit">

        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.LanguageId)
        @Html.HiddenFor(x => x.LegalName)
        @Html.HiddenFor(x => x.InventoryAccountingSystem)
        @Html.HiddenFor(x => x.HasMultiCurrency)
        @Html.HiddenFor(x => x.HasWarehouseManagement)
        @Html.HiddenFor(x => x.CalendarId)
        @Html.HiddenFor(x => x.ImageUrl)

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class=" g-grid-2 g-grid-sm-1">
            <div id="filesbox" class="form-group pt-2">
                <input asp-for="files" class="form-control" />
            </div>
            <div class="group pt-3">
                <div class="form-group mb-1">
                    <label asp-for="Name" class="control-label"></label>
                    @(Html.Kendo().TextBoxFor(m => m.Name)
                        .HtmlAttributes(new { style = "width:100%", onchange = "autoOtherFild(this,`LegalName`)" })
                        )
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="form-group mb-1">
                    <label asp-for="TypeId" class="control-label"></label>
                    @(Html.Kendo().ComboBoxFor(x => x.TypeId).Filter(FilterType.Contains).MinLength(3).Placeholder("انتخاب کنید...").DataTextField("Name").DataValueField("Id").HtmlAttributes(new { style = "width:100%" }).Height(520).DataSource(source => { source.Read(read => { read.Action("Items_GetBusinessTypes", "Basic").Data("filterBusinessTypes"); }).ServerFiltering(true); })
                        )
                    <span asp-validation-for="TypeId" class="text-danger"></span>
                </div>




                <div class="form-group mb-1">
                    <label asp-for="MainCurrencyId" class="control-label"></label>
                    @(Html.Kendo().ComboBoxFor(x => x.MainCurrencyId).Filter(FilterType.Contains).MinLength(3).Placeholder("انتخاب کنید...").DataTextField("Name").DataValueField("Id").HtmlAttributes(new { style = "width:100%" }).Height(520).DataSource(source => { source.Read(read => { read.Action("Items_GetCurrency", "Basic").Data("filterCurrency"); }).ServerFiltering(true); })
                        )
                    <span asp-validation-for="MainCurrencyId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ValueAddedTaxRate" class="control-label"></label>
                    @(Html.Kendo().TextBoxFor(m => m.ValueAddedTaxRate)
                        .HtmlAttributes(new { style = "width:100%", onkeypress = "return isNumberkendo(event,'Number')" })
                        )
                    <span asp-validation-for="ValueAddedTaxRate" class="text-danger"></span>
                </div>


            </div>



        </div>

        <div class="form-group mt-2">
            <input type="submit" value="ذخیره" class="btn btn-primary" />
        </div>
    </form>
</div>


<div class="g-col-3 g-col-sm-4">

<div class="demo-section">
    <div id="validation-success"></div>
       @*  @( *@
        @*     Html.Kendo().Form<Businesses_Accounting.Models.ViewModels.CreateBusinessViewModel>()
            .Name("formExample")
            .HtmlAttributes(new { action = "Edit", method = "POST" })
            .Validatable(v =>
            {
                v.ValidateOnBlur(true);
                v.ValidationSummary(vs => vs.Enable(true));
            })
            .Items(items =>
            {
                items.AddGroup()
                .Label("لوگوی کسب و کار")//.Layout("<div class'k-columns-2'>")
                .Items(i =>
                {
                    i.Add().Field(f => f.files).Label(l => l.Text(" ")).EditorTemplateHandler("uploadEditor");
                });
                items.AddGroup()
            .Label("ویرایش کسب و کار")//.Layout("<div class'k-columns-2'>")
                .Items(i =>
                {
                    i.AddAntiForgeryToken(Html.AntiForgeryToken());
                    i.Add().Field(f => f.Id).Label(l => l.Text("Id:")).Editor(e => { e.Hidden(); });
                    i.Add().Field(f => f.Name).Editor(e => { e.TextBox(); });
                    //    i.Add().Field(f => f.LanguageId).Editor(e => { e.ComboBox().Filter(FilterType.Contains).MinLength(3).Placeholder("انتخاب کنید...").DataTextField("Name").DataValueField("Id").HtmlAttributes(new { style = "width:100%" }).Height(520).DataSource(source => { source.Read(read => { read.Action("Items_GetLanguages", "Basic").Data("filterLanguages"); }).ServerFiltering(true); }); });
                    //    i.Add().Field(f => f.LegalName).Editor(e => { e.TextBox(); });
                    i.Add().Field(f => f.TypeId).Editor(e => { e.ComboBox().Filter(FilterType.Contains).MinLength(3).Placeholder("انتخاب کنید...").DataTextField("Name").DataValueField("Id").HtmlAttributes(new { style = "width:100%" }).Height(520).DataSource(source => { source.Read(read => { read.Action("Items_GetBusinessTypes", "Basic").Data("filterBusinessTypes"); }).ServerFiltering(true); }); });
                    //      });
                    //      items.AddGroup()
                    //         .Label("تنظیمات مالی")//.Layout("<div class'k-columns-2'>")
                    //         .Items(i =>
                    //         {
                    //
                    //             i.Add().Field(f => f.HasMultiCurrency).Editor(e => { e.Switch().Messages(c => c.Checked("بله").Unchecked("خیر")); });
                    //             i.Add().Field(f => f.HasWarehouseManagement).Editor(e => { e.Switch().Messages(c => c.Checked("بله").Unchecked("خیر")); });
                    //
                    //         });
                    //   items.AddGroup().Label(" ")
                    // .Items(i =>
                    //     {

                    i.Add().Field(f => f.MainCurrencyId).Editor(e => { e.ComboBox().Filter(FilterType.Contains).MinLength(3).Placeholder("انتخاب کنید...").DataTextField("Name").DataValueField("Id").HtmlAttributes(new { style = "width:100%" }).Height(520).DataSource(source => { source.Read(read => { read.Action("Items_GetCurrency", "Basic").Data("filterCurrency"); }).ServerFiltering(true); }); });
                    //   i.Add().Field(f => f.CurrenciesIds).Label(l => l.Optional(true)).Editor(e => { e.MultiSelect().AutoClose(false).Placeholder("Please select your favourite sport...").DownArrow(true).NoDataTemplateId("noDataTemplate").DataTextField("Text").Height(520).DataValueField("Value").Filter("contains").DataSource(source => { source.Read(read => { read.Action("Items_GetCurrencies", "Basic").Data("filterCurrencies"); }); }); });
                    //   i.Add().Field(f => f.InventoryAccountingSystem).Editor(e => { e.ComboBox().Filter(FilterType.Contains).MinLength(3).Placeholder("انتخاب کنید...").DataTextField("Text").DataValueField("Value").HtmlAttributes(new { style = "width:100%" }).Height(520).DataSource(source => { source.Read(read => { read.Action("Items_GetInventoryAccountingSystemTypes", "Basic").Data("filterInventoryAccountingSystems"); }).ServerFiltering(true); }); });
                    i.Add().Field(f => f.ValueAddedTaxRate).Editor(e => { e.TextBox().Placeholder("TextBox"); });
                });
                //  items.AddGroup().Label(" ")
                //  .Items(i =>
                //  {
                //      i.Add().Field(f => f.CalendarId).Editor(e => { e.ComboBox().Filter(FilterType.Contains).MinLength(3).Placeholder("انتخاب کنید...").DataTextField("Text").DataValueField("Value").HtmlAttributes(new { style = "width:100%" }).Height(520).DataSource(source => { source.Read(read => { read.Action("Items_GetCalendars", "Basic").Data("filterCalendarsTypes"); }).ServerFiltering(true); }); });
                //  });
            })//.HtmlAttributes(new {@class="k-columns-2"})
              //  .Events(ev => ev.ValidateField("onFormValidateField").Clear("onFormClear"))
            ) *@
</div>

<script>
    function uploadEditor(container, options) {

        let ofield = options.field;
        let imageurl = options.model.ImageUrl;
        $(getImageEditor(ofield, imageurl)).appendTo(container)
        //.kendoUpload();

    }
    // function filterLanguages(e) {
    //     return kendo.ui.ComboBox.requestData($("#LanguageId"));
    // }
    function filterBusinessTypes(e) {
        return kendo.ui.ComboBox.requestData($("#TypeId"));
    }
    function filterCurrency(e) {
        return kendo.ui.ComboBox.requestData($("#MainCurrencyId"));
    } 
    // function filterCurrencies(e) {
    //     return kendo.ui.MultiSelect.requestData($("#CurrenciesIds"));
    // }
    // function filterCalendarsTypes(e) {
    //     return kendo.ui.ComboBox.requestData($("#CalendarId"));
    // }
    // function filterInventoryAccountingSystems(e) {
    //     return kendo.ui.ComboBox.requestData($("#InventoryAccountingSystem"));
    // }
    function onFormValidateField(e) {
        $("#validation-success").html("");
    }

    function onFormSubmit(e) {
        e.preventDefault();
        $("#validation-success").html("<div class='k-messagebox k-messagebox-success'>Form data is valid!</div>");
    }

    function onFormClear(e) {
        $("#validation-success").html("");
    }
</script>

<div>
    <a asp-action="Index">Back to List</a>
</div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        //            <script>
        //                $(document).ready(function () {
        // let els=       document.querySelectorAll(`.k-form-fieldset`);
        //                    for (let i = 0; i < els.length; i++) {
        //                        els[i].className = "k-form-fieldset k-columns-2";
        //                    }
        //                });

        //            </script>
    }
    <script>
        let tempppp = getImageEditor(`files`, `@(Model.ImageUrl)`)
        $(document.getElementById(`filesbox`)).html(tempppp)

    </script>
}



